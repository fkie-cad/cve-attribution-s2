from enum import Enum

from mongoengine import EmbeddedDocument, EmbeddedDocumentField, FloatField, StringField, BooleanField, EnumField

from db.models.cvss import common


class AccessVector(Enum):
    NETWORK = 'NETWORK'
    ADJACENT_NETWORK = 'ADJACENT_NETWORK'
    LOCAL = 'LOCAL'


class AccessComplexity(Enum):
    HIGH = 'HIGH'
    MEDIUM = 'MEDIUM'
    LOW = 'LOW'


class Authentication(Enum):
    MULTPLE = 'MULTIPLE'
    SINGLE = 'SINGLE'
    NONE = 'NONE'


class CIA(Enum):
    NONE = 'NONE'
    PARTIAL = 'PARTIAL'
    COMPLETE = 'COMPLETE'


class CIARequirement(Enum):
    LOW = 'LOW'
    MEDIUM = 'MEDIUM'
    HIGH = 'HIGH'
    NOT_DEFINED = 'NOT_DEFINED'


class Exploitability(Enum):
    UNPROVEN = 'UNPROVEN'
    PROOF_OF_CONCEPT = 'PROOF_OF_CONCEPT'
    FUNCTIONAL = 'FUNCTIONAL'
    HIGH = 'HIGH'
    NOT_DEFINED = 'NOT_DEFINED'


class ReportConfidence(Enum):
    UNCONFIRMED = 'UNCONFIRMED'
    UNCORROBORATED = 'UNCORROBORATED'
    CONFIRMED = 'CONFIRMED'
    NOT_DEFINED = 'NOT_DEFINED'


class Version(Enum):
    V20 = '2.0'


class CollateralDamagePotential(Enum):
    NONE = 'NONE'
    LOW = 'LOW'
    LOW_MEDIUM = 'LOW_MEDIUM'
    MEDIUM_HIGH = 'MEDIUM_HIGH'
    HIGH = 'HIGH'
    NOT_DEFINED = 'NOT_DEFINED'


class TargetDistribution(Enum):
    NONE = 'NONE'
    LOW = 'LOW'
    MEDIUM = 'MEDIUM'
    HIGH = 'HIGH'
    NOT_DEFINED = 'NOT_DEFINED'


class Metric(EmbeddedDocument):
    # https://csrc.nist.gov/schema/nvd/feed/1.1/cvss-v2.0.json
    version = EnumField(Version, required=True)
    vectorString = StringField(required=True)
    accessVector = EnumField(AccessVector)
    accessComplexity = EnumField(AccessComplexity)
    authentication = EnumField(Authentication)
    confidentialityImpact = EnumField(CIA)
    integrityImpact = EnumField(CIA)
    availabilityImpact = EnumField(CIA)
    baseScore = FloatField(min_value=0.0, max_value=10.0, required=True)
    exploitability = EnumField(Exploitability)
    remediationLevel = EnumField(common.RemediationLevel)
    reportConfidence = EnumField(ReportConfidence)
    temporalScore = FloatField(min_value=0.0, max_value=10.0)
    collateralDamagePotential = EnumField(CollateralDamagePotential)
    targetDistribution = EnumField(TargetDistribution)
    confidentialityRequirement = EnumField(CIARequirement)
    integrityRequirement = EnumField(CIARequirement)
    availabilityRequirement = EnumField(CIARequirement)
    environmentalScore = FloatField(min_value=0.0, max_value=10.0)


class BaseMetric(EmbeddedDocument):
    cvssV2 = EmbeddedDocumentField(Metric)
    severity = StringField()
    exploitabilityScore = FloatField(min_value=0.0, max_value=10.0)
    impactScore = FloatField(min_value=0.0, max_value=10.0)
    acInsufInfo = BooleanField()
    obtainAllPrivilege = BooleanField()
    obtainUserPrivilege = BooleanField()
    obtainOtherPrivilege = BooleanField()
    userInteractionRequired = BooleanField()
