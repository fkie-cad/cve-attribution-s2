from mongoengine import Document, StringField, EmbeddedDocumentField, EmbeddedDocument, LongField, URLField


class Meta(EmbeddedDocument):
    lastModifiedDate = StringField(required=True)
    size = LongField(min_value=0, required=True)
    zipSize = LongField(min_value=0, required=True)
    gzSize = LongField(min_value=0, required=True)
    sha256 = StringField(regex=r'^[0-9A-Z]{64}$', required=True)


class Feed(Document):
    feedName = StringField(required=True)
    metaUrl = URLField(required=True)
    dataUrl = URLField(required=True)
    feedType = StringField(required=True)
    metaData = EmbeddedDocumentField(Meta, db_field='meta', required=True)

    meta = {'collection': 'feed'}

    def save(self, **kwargs):
        duplicates = Feed.objects(feedName=self.feedName)
        if len(duplicates) > 0:
            # already exists, get objectid and overwrite
            self.pk = duplicates.first().pk
        super(Feed, self).save(**kwargs)
